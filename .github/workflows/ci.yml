name: CI

on:
    push:
    pull_request:

jobs:
    lint:
        name: Docker Lint
        runs-on: ubuntu-latest
        steps:
          - name: Checkout
            uses: actions/checkout@v3
          - name: Lint Dockerfile
            uses: hadolint/hadolint-action@master
            with:
                dockerfile: Dockerfile
                ignore: DL3007,DL3018 # Ignore using latest on mlocati/php-extension-installer & version in apk add
    build:
        name: Docker build
        runs-on: ubuntu-latest
        steps:
            - name: Checkout
              uses: actions/checkout@v3
            - name: Pull images
              run: docker compose pull
            - name: Start services
              run: docker compose up --build -d
            - name: Wait for services
              run: |
                  while status="$(docker inspect --format="{{if .Config.Healthcheck}}{{print .State.Health.Status}}{{end}}" "$(docker compose ps -q php)")"; do
                    case $status in
                      starting) sleep 1;;
                      healthy) exit 0;;
                      unhealthy) exit 1;;
                    esac
                  done
                  exit 1
            - name: Check HTTP reachability
              run: curl http://localhost
            - name: Check HTTPS reachability
              run: curl -k https://localhost

    symfony-tests:
      runs-on: ubuntu-latest
      steps:
        #  To automatically get bug fixes and new Php versions for shivammathur/setup-php,
        # change this to (see https://github.com/shivammathur/setup-php#bookmark-versioning):
        # uses: shivammathur/setup-php@v2
        - uses: shivammathur/setup-php@2cb9b829437ee246e9b3cac53555a39208ca6d28
          with:
            php-version: '8.0'
        - uses: actions/checkout@v3
        - name: Copy .env.test.local
          run: php -r "file_exists('.env.test.local') || copy('.env.test', '.env.test.local');"
        - name: Cache Composer packages
          id: composer-cache
          uses: actions/cache@v3
          with:
            path: vendor
            key: ${{ runner.os }}-php-${{ hashFiles('**/composer.lock') }}
            restore-keys: |
              ${{ runner.os }}-php-
        - name: Install Dependencies
          run: composer install -q --no-ansi --no-interaction --no-scripts --no-progress --prefer-dist
        - name: Create Database
          run: |
            mkdir -p data
            touch data/database.sqlite
        - name: Execute tests (Unit and Feature tests) via PHPUnit
          env:
            DATABASE_URL: sqlite:///%kernel.project_dir%/data/database.sqlite
          run: vendor/bin/phpunit
